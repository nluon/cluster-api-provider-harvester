nimol
apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster 
metadata:
  namespace: ${NAMESPACE}
  name: ${CLUSTER_NAME} 
  labels:
${RANCHER_TURTLES_LABEL}
    ccm: external
    csi: external
    cni: external
spec:
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
    kind: RKE2ControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: HarvesterCluster
    name: ${CLUSTER_NAME}-hv
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: HarvesterCluster
metadata:
  name: ${CLUSTER_NAME}-hv
  namespace: ${NAMESPACE}
spec:
  targetNamespace: default
  loadBalancerConfig:
    ipamType: pool
    ipPoolRef: ${IP_POOL_NAME}
    listeners:
    - name: rke2-server
      port: 9345
      protocol: TCP
      backendPort: 9345
  server: ${HARVESTER_ENDPOINT}
  identitySecret: 
    namespace: ${NAMESPACE}
    name: hv-identity-secret
---
apiVersion: v1
kind: Secret
metadata:
  namespace: ${NAMESPACE}
  name: hv-identity-secret
data: 
  kubeconfig: ${HARVESTER_KUBECONFIG_B64}
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
kind: RKE2ControlPlane
metadata:
  namespace: ${NAMESPACE}
  name: ${CLUSTER_NAME}-control-plane
spec:
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  agentConfig:
    version: ${KUBERNETES_VERSION}+rke2r1
  serverConfig:
    cni: calico
    cloudProviderName: external
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: HarvesterMachineTemplate
    name: ${CLUSTER_NAME}-cp-machine
    namespace: ${NAMESPACE}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
kind: RKE2ConfigTemplate
metadata:
  namespace: ${NAMESPACE}
  name: ${CLUSTER_NAME}-worker
spec:
  template:
    spec:
      agentConfig:
        version: ${KUBERNETES_VERSION}+rke2r1
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  namespace: ${NAMESPACE}
  name: ${CLUSTER_NAME}-workers
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
          kind: RKE2ConfigTemplate
          name: ${CLUSTER_NAME}-worker
          namespace: ${NAMESPACE}
      clusterName: ${CLUSTER_NAME}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: HarvesterMachineTemplate
        name: ${CLUSTER_NAME}-wk-machine
        namespace: ${NAMESPACE}
      version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: HarvesterMachineTemplate
metadata:
  namespace: ${NAMESPACE}
  name: ${CLUSTER_NAME}-wk-machine
spec:
  template: 
    spec:
      cpu: 1
      memory: 4Gi
      sshUser: ubuntu
      sshKeyPair: ${SSH_KEYPAIR}  
      networks:
      - ${VM_NETWORK}
      volumes:
      - volumeType: image 
        imageName: ${VM_IMAGE_NAME}
        volumeSize: ${VM_DISK_SIZE}
        bootOrder: 0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: HarvesterMachineTemplate
metadata:
  namespace: ${NAMESPACE}
  name: ${CLUSTER_NAME}-cp-machine
spec:
  template: 
    spec:
      cpu: 2
      memory: 8Gi
      sshUser: ubuntu
      sshKeyPair: ${SSH_KEYPAIR}  
      networks:
      - ${VM_NETWORK}
      volumes:
      - volumeType: image 
        imageName: ${VM_IMAGE_NAME}
        volumeSize: ${VM_DISK_SIZE}
        bootOrder: 0
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: crs-harvester-ccm
  namespace: ${NAMESPACE}
spec:
  clusterSelector:
    matchLabels:
      ccm: external
  resources:
  - kind: ConfigMap
    name: cloud-controller-manager-addon
  strategy: Reconcile
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: crs-harvester-csi
  namespace: ${NAMESPACE}
spec:
  clusterSelector:
    matchLabels:
      csi: external
  resources:
  - kind: ConfigMap
    name: harvester-csi-driver-addon
  strategy: Reconcile
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: crs-calico-chart-config
  namespace: ${NAMESPACE}
spec:
  clusterSelector:
    matchLabels:
      cni: external
  resources:
  - kind: ConfigMap
    name: calico-helm-config
  strategy: Reconcile
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloud-controller-manager-addon
  namespace: ${NAMESPACE}
data:
  harvester-csi-deployment.yaml: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      name: harvester-csi-plugin
      namespace: kube-system
    spec:
      selector:
        matchLabels:
          app: harvester-csi-plugin
      template:
        metadata:
          labels:
            app: harvester-csi-plugin
        spec:
          containers:
            - args:
                - --v=5
                - --csi-address=$(ADDRESS)
                - --kubelet-registration-path=/var/lib/kubelet/harvester-plugins/driver.harvesterhci.io/csi.sock
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              image: longhornio/csi-node-driver-registrar:v1.2.0-lh1
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/sh
                      - -c
                      - rm -rf /registration/driver.harvesterhci.io-reg.sock
                        /csi//*
              name: node-driver-registrar
              securityContext:
                privileged: true
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
                - mountPath: /registration
                  name: registration-dir
            - args:
                - --nodeid=$(NODE_ID)
                - --endpoint=$(CSI_ENDPOINT)
                - --kubeconfig=/etc/csi/cloud-config
              env:
                - name: NODE_ID
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CSI_ENDPOINT
                  value: unix:///csi/csi.sock
              image: rancher/harvester-csi-driver:v0.1.6
              imagePullPolicy: Always
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/sh
                      - -c
                      - rm -f /csi//*
              name: harvester-csi-plugin
              securityContext:
                allowPrivilegeEscalation: true
                capabilities:
                  add:
                    - SYS_ADMIN
                privileged: true
              volumeMounts:
                - name: cloud-config
                  mountPath: "/etc/csi"
                  readOnly: true
                - mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
                  mountPropagation: Bidirectional
                  name: kubernetes-csi-dir
                - mountPath: /csi/
                  name: socket-dir
                - mountPath: /var/lib/kubelet/pods
                  mountPropagation: Bidirectional
                  name: pods-mount-dir
                - mountPath: /dev
                  name: host-dev
                - mountPath: /sys
                  name: host-sys
                - mountPath: /rootfs
                  mountPropagation: Bidirectional
                  name: host
                - mountPath: /lib/modules
                  name: lib-modules
                  readOnly: true
          hostPID: true
          serviceAccountName: harvester-csi
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
              operator: Exists
            - effect: NoSchedule
              key: kubevirt.io/drain
              operator: Exists
          volumes:
            - name: cloud-config
              secret:
                secretName: cloud-config
            - hostPath:
                path: /var/lib/kubelet/plugins/kubernetes.io/csi
                type: DirectoryOrCreate
              name: kubernetes-csi-dir
            - hostPath:
                path: /var/lib/kubelet/plugins_registry
                type: Directory
              name: registration-dir
            - hostPath:
                path: /var/lib/kubelet/harvester-plugins/driver.harvesterhci.io
                type: DirectoryOrCreate
              name: socket-dir
            - hostPath:
                path: /var/lib/kubelet/pods
                type: DirectoryOrCreate
              name: pods-mount-dir
            - hostPath:
                path: /dev
              name: host-dev
            - hostPath:
                path: /sys
              name: host-sys
            - hostPath:
                path: /
              name: host
            - hostPath:
                path: /lib/modules
              name: lib-modules
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: harvester-csi
      namespace: kube-system
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: harvester-csi
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: cluster-admin
    subjects:
      - kind: ServiceAccount
        name: harvester-csi
        namespace: kube-system
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: csi-controller
      namespace: kube-system
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: csi-controller
      template:
        metadata:
          labels:
            app: csi-controller
        spec:
          containers:
            - args:
                - --v=5
                - --csi-address=$(ADDRESS)
                - --csiTimeout=2m5s
                - --leader-election
                - --leader-election-namespace=$(POD_NAMESPACE)
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: longhornio/csi-resizer:v0.5.1-lh1
              name: csi-resizer
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
            - args:
                - --v=5
                - --csi-address=$(ADDRESS)
                - --timeout=2m5s
                - --enable-leader-election
                - --leader-election-type=leases
                - --leader-election-namespace=$(POD_NAMESPACE)
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: longhornio/csi-provisioner:v1.6.0-lh1
              name: csi-provisioner
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
            - args:
                - --v=5
                - --csi-address=$(ADDRESS)
                - --timeout=2m5s
                - --leader-election
                - --leader-election-namespace=$(POD_NAMESPACE)
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: longhornio/csi-attacher:v2.2.1-lh1
              name: csi-attacher
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
          serviceAccountName: harvester-csi
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
              operator: Exists
            - effect: NoSchedule
              key: kubevirt.io/drain
              operator: Exists
          volumes:
            - hostPath:
                path: /var/lib/kubelet/harvester-plugins/driver.harvesterhci.io
                type: DirectoryOrCreate
              name: socket-dir
    ---
    apiVersion: storage.k8s.io/v1
    kind: CSIDriver
    metadata:
      name: driver.harvesterhci.io
    spec:
      attachRequired: true
      fsGroupPolicy: ReadWriteOnceWithFSType
      podInfoOnMount: true
      volumeLifecycleModes:
        - Persistent
    ---
    apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: harvester
    allowVolumeExpansion: true
    provisioner: driver.harvesterhci.io
    reclaimPolicy: Delete
    volumeBindingMode: Immediate
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: harvester-csi-driver-addon
  namespace: ${NAMESPACE}
data:
  harvester-cloud-provider-deploy.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/component: cloud-provider
        app.kubernetes.io/name: harvester-cloud-provider
      name: harvester-cloud-provider
      namespace: kube-system
    spec:
      replicas: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: cloud-provider
          app.kubernetes.io/name: harvester-cloud-provider
      template:
        metadata:
          labels:
            app.kubernetes.io/component: cloud-provider
            app.kubernetes.io/name: harvester-cloud-provider
        spec:
          containers:
          - args:
            - --cloud-config=/etc/kubernetes/cloud-config
            command:
            - harvester-cloud-provider
            image: rancher/harvester-cloud-provider:v0.2.0
            imagePullPolicy: Always
            name: harvester-cloud-provider
            resources: {}
            volumeMounts:
            - mountPath: /etc/kubernetes
              name: cloud-config
          serviceAccountName: harvester-cloud-controller-manager
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
          - effect: NoSchedule
            key: node.cloudprovider.kubernetes.io/uninitialized
            operator: Equal
            value: "true"
          volumes:
            - name: cloud-config
              secret:
                secretName: cloud-config
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: harvester-cloud-controller-manager
      namespace: kube-system
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: harvester-cloud-controller-manager
    rules:
    - apiGroups:
      - ""
      resources:
      - services
      - nodes
      - events
      verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
    - apiGroups:
      - ""
      resources:
      - services/status
      verbs:
      - update
      - patch
    - apiGroups:
      - ""
      resources:
      - nodes/status
      verbs:
      - patch
      - update
    - apiGroups:
      - coordination.k8s.io
      resources:
      - leases
      verbs:
      - get
      - create
      - update
    ---
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: harvester-cloud-controller-manager
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: harvester-cloud-controller-manager
    subjects:
      - kind: ServiceAccount
        name: harvester-cloud-controller-manager
        namespace: kube-system
#${CLOUD_CONFIG_SECRET}
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: cloud-config
      namespace: kube-system
    type: Opaque
    data:
      cloud-config: YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKMlZFTkRRVmRQWjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUWtkTlVuZDNSMmRaUkZaUlVVdEZlRTVyWlZjMWFHSlhiR29LWWtkc2VtUkhWblZhV0VsMFlqTktiazFUV1hkS1FWbEVWbEZSUkVSQ01XdGxWelZvWWxkc2FtSkhiSHBrUjFaMVdsaEpkRmt5UmtGTlZHTjVUVVJWTVFwT1ZGVXhUVlJCWlVaM01IbE9SRUV6VFVScmVVMUVRVEZPVkVaaFJuY3dlazVFUVROTlJHTjVUVVJCTVU1VVJtRk5SVmw0U0VSQllVSm5UbFpDUVc5VUNrVXlValZpYlVaMFlWZE9jMkZZVGpCYVZ6VnNZMmt4ZG1OdFkzaEtha0ZyUW1kT1ZrSkJUVTFJVjFJMVltMUdkR0ZYVG5OaFdFNHdXbGMxYkdOcE1Xb0tXVlZCZUU1NlNYZE9WRlV4VGxSVmVFMUdhM2RGZDFsSVMyOWFTWHBxTUVOQlVWbEpTMjlhU1hwcU1FUkJVV05FVVdkQlJYQlRSbU0zY2paMlVVbDNTd3BRYld0WlIwSlhUelF3UjAxS00zTkZTSGM0TWs4ek4zQlBiR1ZaUWpGWloyWkxZbmxzZHpWeFZsSktVV1ZpV1daTVYwaHRWbTEyTlhoS1lWQmxXVFIzQ25GWmJ6VXJUQ3RpWkdGT1EwMUZRWGRFWjFsRVZsSXdVRUZSU0M5Q1FWRkVRV2RMYTAxQk9FZEJNVlZrUlhkRlFpOTNVVVpOUVUxQ1FXWTRkMGhSV1VRS1ZsSXdUMEpDV1VWR1MwVlhlWEZNWlRocWRYSjJVekpJTjFVM1EzZzBOak5OWVZwRlRVRnZSME5EY1VkVFRUUTVRa0ZOUTBFd1owRk5SVlZEU1VSVmRnb3hUMGx1YTFKdmJubzFaa1pVVVZRclNFNHlWaXRrTUVKdFV6TnhiME5GVFdrNFFXMUZhazFWUVdsRlFUaEVLMDgxUzNFME1rZFBWakpvT1ZrMlEyeEVDbGRXVlRReWFtWldZa3BWZFhob1pEVnNRVnBxZHpGclBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdAogICAgc2VydmVyOiBodHRwczovLzEwLjQzLjE2MC4xMTkvazhzL2NsdXN0ZXJzL2MtbS1yZnNrd21zdAogIG5hbWU6IGNsdXN0ZXIKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGNsdXN0ZXIKICAgIHVzZXI6IHVzZXIKICBuYW1lOiBkZWZhdWx0CmN1cnJlbnQtY29udGV4dDogZGVmYXVsdApraW5kOiBDb25maWcKcHJlZmVyZW5jZXM6IHt9CnVzZXJzOgotIG5hbWU6IHVzZXIKICB1c2VyOgogICAgdG9rZW46IHUtMng0aGU3ZWtvbDpya3BxNHJsNHB3cWs3am0ycXNsZ3NzZ2Joajl6cmc1NnJxNXc0ZDVyNm01eng3bjRoajVzcnMK
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: calico-helm-config
  namespace: ${NAMESPACE}
data:
  calico-helm-config.yaml: |
    apiVersion: helm.cattle.io/v1
    kind: HelmChartConfig
    metadata:
      name: rke2-calico
      namespace: kube-system
    spec:
      valuesContent: |-
        installation:
          controlPlaneTolerations:
            - key: "node-role.kubernetes.io/control-plane"
              operator: Exists
              effect: NoSchedule
            - key: "node-role.kubernetes.io/etcd"
              operator: Exists
              effect: NoExecute
            - key: "node.cloudprovider.kubernetes.io/uninitialized"
              operator: Equal
              value: "true"
              effect: NoSchedule
